# установка необходимых пакетов
- name: "Install required dependencies for installing rbenv and ruby-build"
  ansible.builtin.yum:
    name:
      # - postgresql-devel #### Удалить, когда будет postgres
      - libxml2-devel
      - libxslt-devel 
      - gcc
      - gcc-c++
      - kernel-devel
      #############
      - git-core
      - zlib
      - zlib-devel
      - patch
      - readline
      - readline-devel
      - libyaml-devel
      - libffi-devel
      - openssl-devel
      - make
      - bzip2
      - autoconf
      - automake
      - libtool
      - bison
      - curl
      - sqlite-devel
    state: present
    update_cache: yes

# проверка, если Ruby уже установлен 
- name: "Check install Ruby"
  ansible.builtin.shell: ~/.rbenv/bin/ruby -v | awk '{print $1}'
  register: ruby_status
    
# Скачавание и установка rbenv
- name: "Install rbenv from GitHub"
  ansible.builtin.git:
    repo: "{{ item.repo }}"
    dest: "{{ item.dest }}"
  loop:
    - repo: https://github.com/rbenv/rbenv.git
      dest: ~/.rbenv
    - repo: https://github.com/rbenv/ruby-build.git
      dest: ~/.rbenv/plugins/ruby-build
  when: ruby_status is defined and ruby_status.stdout != "ruby"

- name: "Export rbenv path into .bashrc"
  ansible.builtin.blockinfile:
    path: ~/.bashrc
    marker: "######### Ruby bin ###########"
    block: |
      export PATH="$HOME/.rbenv/bin:$PATH"
      eval "$(rbenv init -)"
      export PATH="$HOME/.rbenv/plugins/ruby-build/bin:$PATH"
    state: present
  when: ruby_status is defined and ruby_status.stdout != "ruby"

- name: "source /root/.bashrc"
  ansible.builtin.raw: source /root/.bashrc
  when: ruby_status is defined and ruby_status.stdout != "ruby"

# Установка Ruby
- name: "Install Ruby"
  ansible.builtin.command: ~/.rbenv/bin/rbenv install {{ ruby_version }}
  when: ruby_status is defined and ruby_status.stdout != "ruby"

- name: "Install global version Ruby"
  ansible.builtin.command: ~/.rbenv/bin/rbenv global {{ ruby_version }}
  when: ruby_status is defined and ruby_status.stdout != "ruby"

